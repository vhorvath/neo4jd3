'use strict';

var conf = require('./conf'),
    connect = require('gulp-connect'),
    concat = require('gulp-concat'),
    gulp = require('gulp'),
    runSequence = require('run-sequence'),
    template = require('gulp-template'),
    fs = require('fs');

gulp.task('node_modules', function() {
    runSequence('node_modules:fonts', 'node_modules:images', 'node_modules:styles', 'node_modules:font-references');
});

gulp.task('node_modules:fonts', [], function() {
    return gulp.src([
            'node_modules/font-awesome/fonts/*.*'
        ])
        .pipe(gulp.dest(conf.paths.docs + '/fonts'))
        .pipe(connect.reload());
});

gulp.task('node_modules:images', function() {
    runSequence('node_modules:images_twemoji');
});

gulp.task('node_modules:images_twemoji', [], function() {
    return gulp.src([
            'node_modules/twemoji/2/svg/*.*'
        ])
        .pipe(gulp.dest(conf.paths.docs + '/img/twemoji'))
        .pipe(connect.reload());
});

gulp.task('node_modules:styles', function() {
    return gulp.src([
            'node_modules/font-awesome/css/font-awesome.min.css'
        ])
        .pipe(gulp.dest(conf.paths.docs + '/css'))
        .pipe(connect.reload());
});

gulp.task('node_modules:font-references', function () {
    const faRaw = fs.readFileSync('node_modules/font-awesome/css/font-awesome.min.css', "utf-8");
    const reAll = /(\.[\w\d-]+:before,?){1,}\{content:"\\[a-z\d]{4}"\}/g;
    const reLabel = /(?<=\.fa-)([\w\d-]+)(?=:before)/g;
    const reIndex = /(?<=\{content:\"\\)[a-f\d]{4}/g;

    const fontAwesomeIcons = faRaw.match(reAll).reduce((arr, val) => {
        const labels = val.match(reLabel);
        const index = val.match(reIndex);
        labels.forEach(label => {arr[label] = index[0];});
        return arr;
    }, {});

    gulp.src(conf.paths.src + '/scripts/fa-template.js')
        .pipe(template({"fontAwesomeIcons" : JSON.stringify(fontAwesomeIcons)}))
        .pipe(concat('fa.js'))
        .pipe(gulp.dest(conf.paths.src + '/scripts'))
        .pipe(connect.reload());
});